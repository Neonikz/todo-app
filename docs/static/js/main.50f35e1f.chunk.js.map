{"version":3,"sources":["components/08-use-reducer/todoReducer.js","components/08-use-reducer/TodoListItem.js","components/08-use-reducer/TodoList.js","components/08-use-reducer/TodoAdd.js","hooks/useForm.js","components/08-use-reducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f35e1f.chunk.js","sourcesContent":["\r\n\r\nexport const todoReducer = ( state = [] , action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        case 'toggle':\r\n            return state.map( todo =>\r\n                ( todo.id === action.payload)\r\n                    ? {...todo, done: !todo.done}\r\n                    : todo    \r\n            );\r\n\r\n        case 'toggle-old':\r\n            return state.map( todo => {\r\n                if ( todo.id === action.payload ) {\r\n                    return{\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                }else{\r\n                    return todo;\r\n                }\r\n            } )\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoListItem = ({todo,index,handleDelete,handleToggle}) => {\r\n    return (\r\n        <li\r\n        key={todo.id}\r\n        className=\"list-group-item\"\r\n        > \r\n        <p \r\n            className={ `${ todo.done && 'complete'}` }\r\n            onClick={ () => handleToggle(todo.id) }\r\n        >{index + 1}. {todo.desc}</p> \r\n        <button\r\n            className=\"btn btn-danger\"\r\n            onClick={ () => handleDelete(todo.id) }\r\n        >\r\n            Borrar\r\n        </button>\r\n    </li>\r\n    )\r\n}\r\n\r\n// TodoListItem.propTypes = {\r\n//     todo: PropTypes.object.isRequired,\r\n//     index: PropTypes.number.isRequired,\r\n//     handleDelete: PropTypes.func.isRequired,\r\n//     handleToggle: PropTypes.func.isRequired\r\n// }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\n\r\nexport const TodoList = ({todos,handleDelete,handleToggle}) => {\r\n    return (\r\n            <ul className=\"list-group list-group-flush\">\r\n                {\r\n                    todos.map( (todo,i) => (\r\n                        <TodoListItem \r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            index={i}\r\n                            handleDelete={handleDelete}\r\n                            handleToggle={handleToggle}\r\n                        />\r\n                    ))\r\n                }\r\n                </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n    handleToggle: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n    const[ { description }, handleInputChange, reset] = useForm({\r\n        description:''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( !description.trim() ) {\r\n            return;\r\n        }\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo( newTodo );\r\n        reset();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Aprender...\"\r\n                    autoComplete=\"off\"\r\n                    value={ description }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n                \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () =>{\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset]\r\n\r\n}\r\n","import React, { useEffect, useReducer} from 'react'\r\nimport { todoReducer } from './todoReducer';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport './styles.css';\r\n\r\n\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [] ;\r\n\r\n\r\n\r\n    // return [{\r\n    //     id: new Date().getTime(),\r\n    //     desc: 'Aprender React',\r\n    //     done: false\r\n    // }]\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch] = useReducer(todoReducer, [] , init);\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify( todos ));\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) => {\r\n\r\n        //Crear la accion\r\n        const actionDelete = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n        //Dispatch\r\n        dispatch( actionDelete );\r\n    }\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type:'toggle',\r\n            payload: todoId\r\n        })\r\n    }\r\n    const handleAddTodo = ( newTodo ) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h1>TodoApp <small>( {todos.length} )</small> </h1> \r\n           <hr />\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-7\">\r\n\r\n                <TodoList \r\n                    todos={todos}\r\n                    handleDelete={handleDelete}\r\n                    handleToggle={handleToggle}\r\n                />\r\n\r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                    \r\n                    <TodoAdd\r\n                        handleAddTodo={ handleAddTodo }\r\n                    />\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { MainApp } from './components/09-use-context/MainApp';\nimport { TodoApp } from './components/08-use-reducer/TodoApp';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// import { CallBackHook } from './components/06-memos/CallBackHook';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { Layout } from './components/05-use-layout-effect/LayoutEffect';\n// import { RealExampleRef } from './components/04-use-ref/RealExampleRef';\n// import { FocusScreen } from './components/04-use-ref/FocusScreen';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { FormWithCustomHook } from './components/02-use-effect/FormWithCustomHook';\n// import { SimpleForm } from './components/02-use-effect/SimpleForm';\n// import { CounterWithCustomHook } from './components/01-use-state/CounterWithCustomHook';\n// import { CounterApp } from './components/01-use-state/CounterApp';\n// import { HooksApp } from './HookApp';\n\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}